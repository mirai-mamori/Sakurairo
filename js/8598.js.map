{"version":3,"file":"8598.js","mappings":"8GAgFAA,EAAOC,QAxEP,SAAcC,GAkDZ,MAAO,CACLC,KAAM,OACNC,SAAU,CACRC,QApDa,CACf,UACA,SACA,QACA,SACA,SACA,WACA,QACA,SACA,MACA,MACA,QACA,MACA,UACA,QACA,KACA,OACA,OACA,QACA,OACA,QACA,WACA,UACA,eACA,OACA,OACA,SACA,SACA,KACA,OACA,OACA,YACA,MACA,QACA,UACA,QACA,QACA,WACA,mBACA,kBACA,SACA,aACA,MACA,MACA,SACA,OACA,SAOEC,QAAS,CACP,OACA,QACA,SAGJC,SAAU,CACRL,EAAKM,kBACLN,EAAKO,kBACLP,EAAKQ,cACL,CACEC,UAAW,OACXC,MAAO,eAIf,C,WC+GAZ,EAAOC,QArLP,SAAgBC,GAqKd,MAAO,CACLC,KAAM,SACNU,kBAAkB,EAClBT,SAvKe,CACf,OACA,UACA,cACA,cACA,YACA,cACA,iBACA,eACA,eACA,aACA,cACA,SACA,OACA,OACA,UACA,UACA,SACA,YACA,iBACA,WACA,UACA,sBACA,sBACA,QACA,UACA,SACA,UACA,UACA,QACA,UACA,MACA,MACA,WACA,QACA,OACA,QACA,WACA,UACA,KACA,OACA,UACA,QACA,UACA,MACA,KACA,aACA,aACA,SACA,MACA,UACA,YACA,SACA,SACA,SACA,SACA,eACA,QACA,SACA,YACA,MACA,WACA,QACA,WACA,UACA,SACA,QACA,OACA,QACA,OACA,OACA,YACA,aACA,WACA,OACA,UACA,OACA,OACA,QACA,SACA,QACA,MACA,YACA,OACA,QACA,OACA,UACA,UACA,OACA,WACA,MACA,MACA,SACA,SACA,aACA,OACA,UACA,YACA,QACA,MACA,OACA,OACA,WACA,WACA,WACA,QACA,OACA,UACA,UACA,QACA,SACA,QACA,SACA,UACA,OACA,YACA,SACA,UACA,YACA,gBACA,SACA,OACA,YACA,QACA,WACA,iBACA,kBACA,iBACA,YACA,YACA,OACA,OACA,MACA,QACA,WACA,QACA,UACA,OACA,QACA,OACA,YACA,Y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","sources":["webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/golo.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/gradle.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/graphql.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/groovy.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/haml.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/handlebars.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/haskell.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/haxe.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/hsp.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/http.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/hy.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/inform7.js","webpack://sakurairo-scripts/./node_modules/.pnpm/highlight.js@11.11.1/node_modules/highlight.js/lib/languages/ini.js"],"sourcesContent":["/*\nLanguage: Golo\nAuthor: Philippe Charriere <ph.charriere@gmail.com>\nDescription: a lightweight dynamic language for the JVM\nWebsite: http://golo-lang.org/\nCategory: system\n*/\n\nfunction golo(hljs) {\n  const KEYWORDS = [\n    \"println\",\n    \"readln\",\n    \"print\",\n    \"import\",\n    \"module\",\n    \"function\",\n    \"local\",\n    \"return\",\n    \"let\",\n    \"var\",\n    \"while\",\n    \"for\",\n    \"foreach\",\n    \"times\",\n    \"in\",\n    \"case\",\n    \"when\",\n    \"match\",\n    \"with\",\n    \"break\",\n    \"continue\",\n    \"augment\",\n    \"augmentation\",\n    \"each\",\n    \"find\",\n    \"filter\",\n    \"reduce\",\n    \"if\",\n    \"then\",\n    \"else\",\n    \"otherwise\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"raise\",\n    \"throw\",\n    \"orIfNull\",\n    \"DynamicObject|10\",\n    \"DynamicVariable\",\n    \"struct\",\n    \"Observable\",\n    \"map\",\n    \"set\",\n    \"vector\",\n    \"list\",\n    \"array\"\n  ];\n\n  return {\n    name: 'Golo',\n    keywords: {\n      keyword: KEYWORDS,\n      literal: [\n        \"true\",\n        \"false\",\n        \"null\"\n      ]\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = golo;\n","/*\nLanguage: Gradle\nDescription: Gradle is an open-source build automation tool focused on flexibility and performance.\nWebsite: https://gradle.org\nAuthor: Damian Mee <mee.damian@gmail.com>\nCategory: build-system\n*/\n\nfunction gradle(hljs) {\n  const KEYWORDS = [\n    \"task\",\n    \"project\",\n    \"allprojects\",\n    \"subprojects\",\n    \"artifacts\",\n    \"buildscript\",\n    \"configurations\",\n    \"dependencies\",\n    \"repositories\",\n    \"sourceSets\",\n    \"description\",\n    \"delete\",\n    \"from\",\n    \"into\",\n    \"include\",\n    \"exclude\",\n    \"source\",\n    \"classpath\",\n    \"destinationDir\",\n    \"includes\",\n    \"options\",\n    \"sourceCompatibility\",\n    \"targetCompatibility\",\n    \"group\",\n    \"flatDir\",\n    \"doLast\",\n    \"doFirst\",\n    \"flatten\",\n    \"todir\",\n    \"fromdir\",\n    \"ant\",\n    \"def\",\n    \"abstract\",\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"extends\",\n    \"final\",\n    \"finally\",\n    \"for\",\n    \"if\",\n    \"implements\",\n    \"instanceof\",\n    \"native\",\n    \"new\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"return\",\n    \"static\",\n    \"switch\",\n    \"synchronized\",\n    \"throw\",\n    \"throws\",\n    \"transient\",\n    \"try\",\n    \"volatile\",\n    \"while\",\n    \"strictfp\",\n    \"package\",\n    \"import\",\n    \"false\",\n    \"null\",\n    \"super\",\n    \"this\",\n    \"true\",\n    \"antlrtask\",\n    \"checkstyle\",\n    \"codenarc\",\n    \"copy\",\n    \"boolean\",\n    \"byte\",\n    \"char\",\n    \"class\",\n    \"double\",\n    \"float\",\n    \"int\",\n    \"interface\",\n    \"long\",\n    \"short\",\n    \"void\",\n    \"compile\",\n    \"runTime\",\n    \"file\",\n    \"fileTree\",\n    \"abs\",\n    \"any\",\n    \"append\",\n    \"asList\",\n    \"asWritable\",\n    \"call\",\n    \"collect\",\n    \"compareTo\",\n    \"count\",\n    \"div\",\n    \"dump\",\n    \"each\",\n    \"eachByte\",\n    \"eachFile\",\n    \"eachLine\",\n    \"every\",\n    \"find\",\n    \"findAll\",\n    \"flatten\",\n    \"getAt\",\n    \"getErr\",\n    \"getIn\",\n    \"getOut\",\n    \"getText\",\n    \"grep\",\n    \"immutable\",\n    \"inject\",\n    \"inspect\",\n    \"intersect\",\n    \"invokeMethods\",\n    \"isCase\",\n    \"join\",\n    \"leftShift\",\n    \"minus\",\n    \"multiply\",\n    \"newInputStream\",\n    \"newOutputStream\",\n    \"newPrintWriter\",\n    \"newReader\",\n    \"newWriter\",\n    \"next\",\n    \"plus\",\n    \"pop\",\n    \"power\",\n    \"previous\",\n    \"print\",\n    \"println\",\n    \"push\",\n    \"putAt\",\n    \"read\",\n    \"readBytes\",\n    \"readLines\",\n    \"reverse\",\n    \"reverseEach\",\n    \"round\",\n    \"size\",\n    \"sort\",\n    \"splitEachLine\",\n    \"step\",\n    \"subMap\",\n    \"times\",\n    \"toInteger\",\n    \"toList\",\n    \"tokenize\",\n    \"upto\",\n    \"waitForOrKill\",\n    \"withPrintWriter\",\n    \"withReader\",\n    \"withStream\",\n    \"withWriter\",\n    \"withWriterAppend\",\n    \"write\",\n    \"writeLine\"\n  ];\n  return {\n    name: 'Gradle',\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.REGEXP_MODE\n\n    ]\n  };\n}\n\nmodule.exports = gradle;\n","/*\n Language: GraphQL\n Author: John Foster (GH jf990), and others\n Description: GraphQL is a query language for APIs\n Category: web, common\n*/\n\n/** @type LanguageFn */\nfunction graphql(hljs) {\n  const regex = hljs.regex;\n  const GQL_NAME = /[_A-Za-z][_0-9A-Za-z]*/;\n  return {\n    name: \"GraphQL\",\n    aliases: [ \"gql\" ],\n    case_insensitive: true,\n    disableAutodetect: false,\n    keywords: {\n      keyword: [\n        \"query\",\n        \"mutation\",\n        \"subscription\",\n        \"type\",\n        \"input\",\n        \"schema\",\n        \"directive\",\n        \"interface\",\n        \"union\",\n        \"scalar\",\n        \"fragment\",\n        \"enum\",\n        \"on\"\n      ],\n      literal: [\n        \"true\",\n        \"false\",\n        \"null\"\n      ]\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      {\n        scope: \"punctuation\",\n        match: /[.]{3}/,\n        relevance: 0\n      },\n      {\n        scope: \"punctuation\",\n        begin: /[\\!\\(\\)\\:\\=\\[\\]\\{\\|\\}]{1}/,\n        relevance: 0\n      },\n      {\n        scope: \"variable\",\n        begin: /\\$/,\n        end: /\\W/,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        scope: \"meta\",\n        match: /@\\w+/,\n        excludeEnd: true\n      },\n      {\n        scope: \"symbol\",\n        begin: regex.concat(GQL_NAME, regex.lookahead(/\\s*:/)),\n        relevance: 0\n      }\n    ],\n    illegal: [\n      /[;<']/,\n      /BEGIN/\n    ]\n  };\n}\n\nmodule.exports = graphql;\n","/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n Category: system\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  { className: \"string\" }\n  );\n\n  const CLASS_DEFINITION = {\n    match: [\n      /(class|interface|trait|enum|record|extends|implements)/,\n      /\\s+/,\n      hljs.UNDERSCORE_IDENT_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\",\n    }\n  };\n  const TYPES = [\n    \"byte\",\n    \"short\",\n    \"char\",\n    \"int\",\n    \"long\",\n    \"boolean\",\n    \"float\",\n    \"double\",\n    \"void\"\n  ];\n  const KEYWORDS = [\n    // groovy specific keywords\n    \"def\",\n    \"as\",\n    \"in\",\n    \"assert\",\n    \"trait\",\n    // common keywords with Java\n    \"abstract\",\n    \"static\",\n    \"volatile\",\n    \"transient\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"synchronized\",\n    \"final\",\n    \"class\",\n    \"interface\",\n    \"enum\",\n    \"if\",\n    \"else\",\n    \"for\",\n    \"while\",\n    \"switch\",\n    \"case\",\n    \"break\",\n    \"default\",\n    \"continue\",\n    \"throw\",\n    \"throws\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"implements\",\n    \"extends\",\n    \"new\",\n    \"import\",\n    \"package\",\n    \"return\",\n    \"instanceof\",\n    \"var\"\n  ];\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      \"variable.language\": 'this super',\n      literal: 'true false null',\n      type: TYPES,\n      keyword: KEYWORDS\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      CLASS_DEFINITION,\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + regex.lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n","/*\nLanguage: HAML\nRequires: ruby.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://haml.info\nCategory: template\n*/\n\n// TODO support filter tags like :javascript, support inline HTML\nfunction haml(hljs) {\n  return {\n    name: 'HAML',\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '^!!!( (5|1\\\\.1|Strict|Frameset|Basic|Mobile|RDFa|XML\\\\b.*))?$',\n        relevance: 10\n      },\n      // FIXME these comments should be allowed to span indented lines\n      hljs.COMMENT(\n        '^\\\\s*(!=#|=#|-#|/).*$',\n        null,\n        { relevance: 0 }\n      ),\n      {\n        begin: '^\\\\s*(-|=|!=)(?!#)',\n        end: /$/,\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'tag',\n        begin: '^\\\\s*%',\n        contains: [\n          {\n            className: 'selector-tag',\n            begin: '\\\\w+'\n          },\n          {\n            className: 'selector-id',\n            begin: '#[\\\\w-]+'\n          },\n          {\n            className: 'selector-class',\n            begin: '\\\\.[\\\\w-]+'\n          },\n          {\n            begin: /\\{\\s*/,\n            end: /\\s*\\}/,\n            contains: [\n              {\n                begin: ':\\\\w+\\\\s*=>',\n                end: ',\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: ':\\\\w+'\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          },\n          {\n            begin: '\\\\(\\\\s*',\n            end: '\\\\s*\\\\)',\n            excludeEnd: true,\n            contains: [\n              {\n                begin: '\\\\w+\\\\s*=',\n                end: '\\\\s+',\n                returnBegin: true,\n                endsWithParent: true,\n                contains: [\n                  {\n                    className: 'attr',\n                    begin: '\\\\w+',\n                    relevance: 0\n                  },\n                  hljs.APOS_STRING_MODE,\n                  hljs.QUOTE_STRING_MODE,\n                  {\n                    begin: '\\\\w+',\n                    relevance: 0\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      { begin: '^\\\\s*[=~]\\\\s*' },\n      {\n        begin: /#\\{/,\n        end: /\\}/,\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true\n      }\n    ]\n  };\n}\n\nmodule.exports = haml;\n","/*\nLanguage: Handlebars\nRequires: xml.js\nAuthor: Robin Ward <robin.ward@gmail.com>\nDescription: Matcher for Handlebars as well as EmberJS additions.\nWebsite: https://handlebarsjs.com\nCategory: template\n*/\n\nfunction handlebars(hljs) {\n  const regex = hljs.regex;\n  const BUILT_INS = {\n    $pattern: /[\\w.\\/]+/,\n    built_in: [\n      'action',\n      'bindattr',\n      'collection',\n      'component',\n      'concat',\n      'debugger',\n      'each',\n      'each-in',\n      'get',\n      'hash',\n      'if',\n      'in',\n      'input',\n      'link-to',\n      'loc',\n      'log',\n      'lookup',\n      'mut',\n      'outlet',\n      'partial',\n      'query-params',\n      'render',\n      'template',\n      'textarea',\n      'unbound',\n      'unless',\n      'view',\n      'with',\n      'yield'\n    ]\n  };\n\n  const LITERALS = {\n    $pattern: /[\\w.\\/]+/,\n    literal: [\n      'true',\n      'false',\n      'undefined',\n      'null'\n    ]\n  };\n\n  // as defined in https://handlebarsjs.com/guide/expressions.html#literal-segments\n  // this regex matches literal segments like ' abc ' or [ abc ] as well as helpers and paths\n  // like a/b, ./abc/cde, and abc.bcd\n\n  const DOUBLE_QUOTED_ID_REGEX = /\"\"|\"[^\"]+\"/;\n  const SINGLE_QUOTED_ID_REGEX = /''|'[^']+'/;\n  const BRACKET_QUOTED_ID_REGEX = /\\[\\]|\\[[^\\]]+\\]/;\n  const PLAIN_ID_REGEX = /[^\\s!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]+/;\n  const PATH_DELIMITER_REGEX = /(\\.|\\/)/;\n  const ANY_ID = regex.either(\n    DOUBLE_QUOTED_ID_REGEX,\n    SINGLE_QUOTED_ID_REGEX,\n    BRACKET_QUOTED_ID_REGEX,\n    PLAIN_ID_REGEX\n  );\n\n  const IDENTIFIER_REGEX = regex.concat(\n    regex.optional(/\\.|\\.\\/|\\//), // relative or absolute path\n    ANY_ID,\n    regex.anyNumberOfTimes(regex.concat(\n      PATH_DELIMITER_REGEX,\n      ANY_ID\n    ))\n  );\n\n  // identifier followed by a equal-sign (without the equal sign)\n  const HASH_PARAM_REGEX = regex.concat(\n    '(',\n    BRACKET_QUOTED_ID_REGEX, '|',\n    PLAIN_ID_REGEX,\n    ')(?==)'\n  );\n\n  const HELPER_NAME_OR_PATH_EXPRESSION = { begin: IDENTIFIER_REGEX };\n\n  const HELPER_PARAMETER = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, { keywords: LITERALS });\n\n  const SUB_EXPRESSION = {\n    begin: /\\(/,\n    end: /\\)/\n    // the \"contains\" is added below when all necessary sub-modes are defined\n  };\n\n  const HASH = {\n    // fka \"attribute-assignment\", parameters of the form 'key=value'\n    className: 'attr',\n    begin: HASH_PARAM_REGEX,\n    relevance: 0,\n    starts: {\n      begin: /=/,\n      end: /=/,\n      starts: { contains: [\n        hljs.NUMBER_MODE,\n        hljs.QUOTE_STRING_MODE,\n        hljs.APOS_STRING_MODE,\n        HELPER_PARAMETER,\n        SUB_EXPRESSION\n      ] }\n    }\n  };\n\n  const BLOCK_PARAMS = {\n    // parameters of the form '{{#with x as | y |}}...{{/with}}'\n    begin: /as\\s+\\|/,\n    keywords: { keyword: 'as' },\n    end: /\\|/,\n    contains: [\n      {\n        // define sub-mode in order to prevent highlighting of block-parameter named \"as\"\n        begin: /\\w+/ }\n    ]\n  };\n\n  const HELPER_PARAMETERS = {\n    contains: [\n      hljs.NUMBER_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      BLOCK_PARAMS,\n      HASH,\n      HELPER_PARAMETER,\n      SUB_EXPRESSION\n    ],\n    returnEnd: true\n    // the property \"end\" is defined through inheritance when the mode is used. If depends\n    // on the surrounding mode, but \"endsWithParent\" does not work here (i.e. it includes the\n    // end-token of the surrounding mode)\n  };\n\n  const SUB_EXPRESSION_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    className: 'name',\n    keywords: BUILT_INS,\n    starts: hljs.inherit(HELPER_PARAMETERS, { end: /\\)/ })\n  });\n\n  SUB_EXPRESSION.contains = [ SUB_EXPRESSION_CONTENTS ];\n\n  const OPENING_BLOCK_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: BUILT_INS,\n    className: 'name',\n    starts: hljs.inherit(HELPER_PARAMETERS, { end: /\\}\\}/ })\n  });\n\n  const CLOSING_BLOCK_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    keywords: BUILT_INS,\n    className: 'name'\n  });\n\n  const BASIC_MUSTACHE_CONTENTS = hljs.inherit(HELPER_NAME_OR_PATH_EXPRESSION, {\n    className: 'name',\n    keywords: BUILT_INS,\n    starts: hljs.inherit(HELPER_PARAMETERS, { end: /\\}\\}/ })\n  });\n\n  const ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\{\\{/,\n    skip: true\n  };\n  const PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\\\(?=\\{\\{)/,\n    skip: true\n  };\n\n  return {\n    name: 'Handlebars',\n    aliases: [\n      'hbs',\n      'html.hbs',\n      'html.handlebars',\n      'htmlbars'\n    ],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\n      {\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{(?!\\/)/,\n        end: /\\}\\}\\}\\}/,\n        contains: [ OPENING_BLOCK_MUSTACHE_CONTENTS ],\n        starts: {\n          end: /\\{\\{\\{\\{\\//,\n          returnEnd: true,\n          subLanguage: 'xml'\n        }\n      },\n      {\n        // close raw block\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{\\//,\n        end: /\\}\\}\\}\\}/,\n        contains: [ CLOSING_BLOCK_MUSTACHE_CONTENTS ]\n      },\n      {\n        // open block statement\n        className: 'template-tag',\n        begin: /\\{\\{#/,\n        end: /\\}\\}/,\n        contains: [ OPENING_BLOCK_MUSTACHE_CONTENTS ]\n      },\n      {\n        className: 'template-tag',\n        begin: /\\{\\{(?=else\\}\\})/,\n        end: /\\}\\}/,\n        keywords: 'else'\n      },\n      {\n        className: 'template-tag',\n        begin: /\\{\\{(?=else if)/,\n        end: /\\}\\}/,\n        keywords: 'else if'\n      },\n      {\n        // closing block statement\n        className: 'template-tag',\n        begin: /\\{\\{\\//,\n        end: /\\}\\}/,\n        contains: [ CLOSING_BLOCK_MUSTACHE_CONTENTS ]\n      },\n      {\n        // template variable or helper-call that is NOT html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{\\{/,\n        end: /\\}\\}\\}/,\n        contains: [ BASIC_MUSTACHE_CONTENTS ]\n      },\n      {\n        // template variable or helper-call that is html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{/,\n        end: /\\}\\}/,\n        contains: [ BASIC_MUSTACHE_CONTENTS ]\n      }\n    ]\n  };\n}\n\nmodule.exports = handlebars;\n","/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n\n  /* See:\n     - https://www.haskell.org/onlinereport/lexemes.html\n     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/binary_literals.html\n     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/numeric_underscores.html\n     - https://downloads.haskell.org/ghc/9.0.1/docs/html/users_guide/exts/hex_float_literals.html\n  */\n  const decimalDigits = '([0-9]_*)+';\n  const hexDigits = '([0-9a-fA-F]_*)+';\n  const binaryDigits = '([01]_*)+';\n  const octalDigits = '([0-7]_*)+';\n  const ascSymbol = '[!#$%&*+.\\\\/<=>?@\\\\\\\\^~-]';\n  const uniSymbol = '(\\\\p{S}|\\\\p{P})'; // Symbol or Punctuation\n  const special = '[(),;\\\\[\\\\]`|{}]';\n  const symbol = `(${ascSymbol}|(?!(${special}|[_:\"']))${uniSymbol})`;\n\n  const COMMENT = { variants: [\n    // Double dash forms a valid comment only if it's not part of legal lexeme.\n    // See: Haskell 98 report: https://www.haskell.org/onlinereport/lexemes.html\n    //\n    // The commented code does the job, but we can't use negative lookbehind,\n    // due to poor support by Safari browser.\n    // > hljs.COMMENT(`(?<!${symbol})--+(?!${symbol})`, '$'),\n    // So instead, we'll add a no-markup rule before the COMMENT rule in the rules list\n    // to match the problematic infix operators that contain double dash.\n    hljs.COMMENT('--+', '$'),\n    hljs.COMMENT(\n      /\\{-/,\n      /-\\}/,\n      { contains: [ 'self' ] }\n    )\n  ] };\n\n  const PRAGMA = {\n    className: 'meta',\n    begin: /\\{-#/,\n    end: /#-\\}/\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#',\n    end: '$'\n  };\n\n  const CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'\n      },\n      hljs.inherit(hljs.TITLE_MODE, { begin: '[_a-z][\\\\w\\']*' }),\n      COMMENT\n    ]\n  };\n\n  const RECORD = {\n    begin: /\\{/,\n    end: /\\}/,\n    contains: LIST.contains\n  };\n\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal floating-point-literal (subsumes decimal-literal)\n      { match: `\\\\b(${decimalDigits})(\\\\.(${decimalDigits}))?` + `([eE][+-]?(${decimalDigits}))?\\\\b` },\n      // hexadecimal floating-point-literal (subsumes hexadecimal-literal)\n      { match: `\\\\b0[xX]_*(${hexDigits})(\\\\.(${hexDigits}))?` + `([pP][+-]?(${decimalDigits}))?\\\\b` },\n      // octal-literal\n      { match: `\\\\b0[oO](${octalDigits})\\\\b` },\n      // binary-literal\n      { match: `\\\\b0[bB](${binaryDigits})\\\\b` }\n    ]\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: [ 'hs' ],\n    keywords:\n      'let in if then else case of where do module import hiding '\n      + 'qualified type data newtype deriving class instance as default '\n      + 'infix infixl infixr foreign export ccall stdcall cplusplus '\n      + 'jvm dotnet safe unsafe family forall mdo proc rec',\n    unicodeRegex: true,\n    contains: [\n      // Top-level constructions.\n      {\n        beginKeywords: 'module',\n        end: 'where',\n        keywords: 'module where',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b',\n        end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [\n          LIST,\n          COMMENT\n        ],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b',\n        end: 'where',\n        keywords: 'class family instance where',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b',\n        end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [\n          PRAGMA,\n          CONSTRUCTOR,\n          LIST,\n          RECORD,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'default',\n        end: '$',\n        contains: [\n          CONSTRUCTOR,\n          LIST,\n          COMMENT\n        ]\n      },\n      {\n        beginKeywords: 'infix infixl infixr',\n        end: '$',\n        contains: [\n          hljs.C_NUMBER_MODE,\n          COMMENT\n        ]\n      },\n      {\n        begin: '\\\\bforeign\\\\b',\n        end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm '\n                  + 'dotnet safe unsafe',\n        contains: [\n          CONSTRUCTOR,\n          hljs.QUOTE_STRING_MODE,\n          COMMENT\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',\n        end: '$'\n      },\n      // \"Whitespaces\".\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // Single characters.\n      {\n        scope: 'string',\n        begin: /'(?=\\\\?.')/,\n        end: /'/,\n        contains: [\n          {\n            scope: 'char.escape',\n            match: /\\\\./,\n          },\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      NUMBER,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, { begin: '^[_a-z][\\\\w\\']*' }),\n      // No markup, prevents infix operators from being recognized as comments.\n      { begin: `(?!-)${symbol}--+|--+(?!-)${symbol}`},\n      COMMENT,\n      { // No markup, relevance booster\n        begin: '->|<-' }\n    ]\n  };\n}\n\nmodule.exports = haskell;\n","/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\nCategory: system\n*/\n\nfunction haxe(hljs) {\n  const IDENT_RE = '[a-zA-Z_$][a-zA-Z0-9_$]*';\n\n  // C_NUMBER_RE with underscores and literal suffixes\n  const HAXE_NUMBER_RE = /(-?)(\\b0[xX][a-fA-F0-9_]+|(\\b\\d+(\\.[\\d_]*)?|\\.[\\d_]+)(([eE][-+]?\\d+)|i32|u32|i64|f64)?)/;\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: [ 'hx' ],\n    keywords: {\n      keyword: 'abstract break case cast catch continue default do dynamic else enum extern '\n               + 'final for function here if import in inline is macro never new override package private get set '\n               + 'public return static super switch this throw trace try typedef untyped using var while '\n               + HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: /\\$\\{/,\n            end: /\\}/\n          },\n          {\n            className: 'subst', // interpolation\n            begin: /\\$/,\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: HAXE_NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'variable',\n        begin: \"\\\\$\" + IDENT_RE,\n      },\n      {\n        className: 'meta', // compiler meta\n        begin: /@:?/,\n        end: /\\(|$/,\n        excludeEnd: true,\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'if else elseif end error' }\n      },\n      {\n        className: 'type', // function types\n        begin: /:[ \\t]*/,\n        end: /[^A-Za-z0-9_ \\t\\->]/,\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: /:[ \\t]*/,\n        end: /\\W/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        beginKeywords: 'new',\n        end: /\\W/,\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'title.class', // enums\n        beginKeywords: 'enum',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'title.class', // abstracts\n        begin: '\\\\babstract\\\\b(?=\\\\s*' + hljs.IDENT_RE + '\\\\s*\\\\()',\n        end: /[\\{$]/,\n        contains: [\n          {\n            className: 'type',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: /from +/,\n            end: /\\W/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: /to +/,\n            end: /\\W/,\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: { keyword: 'abstract from to' }\n      },\n      {\n        className: 'title.class', // classes\n        begin: /\\b(class|interface) +/,\n        end: /[\\{$]/,\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: /\\b(extends|implements) +/,\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'title.function',\n        beginKeywords: 'function',\n        end: /\\(/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [ hljs.TITLE_MODE ]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nmodule.exports = haxe;\n","/*\nLanguage: HSP\nAuthor: prince <MC.prince.0203@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/Hot_Soup_Processor\nCategory: scripting\n*/\n\nfunction hsp(hljs) {\n  return {\n    name: 'HSP',\n    case_insensitive: true,\n    keywords: {\n      $pattern: /[\\w._]+/,\n      keyword: 'goto gosub return break repeat loop continue wait await dim sdim foreach dimtype dup dupptr end stop newmod delmod mref run exgoto on mcall assert logmes newlab resume yield onexit onerror onkey onclick oncmd exist delete mkdir chdir dirlist bload bsave bcopy memfile if else poke wpoke lpoke getstr chdpm memexpand memcpy memset notesel noteadd notedel noteload notesave randomize noteunsel noteget split strrep setease button chgdisp exec dialog mmload mmplay mmstop mci pset pget syscolor mes print title pos circle cls font sysfont objsize picload color palcolor palette redraw width gsel gcopy gzoom gmode bmpsave hsvcolor getkey listbox chkbox combox input mesbox buffer screen bgscr mouse objsel groll line clrobj boxf objprm objmode stick grect grotate gsquare gradf objimage objskip objenable celload celdiv celput newcom querycom delcom cnvstow comres axobj winobj sendmsg comevent comevarg sarrayconv callfunc cnvwtos comevdisp libptr system hspstat hspver stat cnt err strsize looplev sublev iparam wparam lparam refstr refdval int rnd strlen length length2 length3 length4 vartype gettime peek wpeek lpeek varptr varuse noteinfo instr abs limit getease str strmid strf getpath strtrim sin cos tan atan sqrt double absf expf logf limitf powf geteasef mousex mousey mousew hwnd hinstance hdc ginfo objinfo dirinfo sysinfo thismod __hspver__ __hsp30__ __date__ __time__ __line__ __file__ _debug __hspdef__ and or xor not screen_normal screen_palette screen_hide screen_fixedsize screen_tool screen_frame gmode_gdi gmode_mem gmode_rgb0 gmode_alpha gmode_rgb0alpha gmode_add gmode_sub gmode_pixela ginfo_mx ginfo_my ginfo_act ginfo_sel ginfo_wx1 ginfo_wy1 ginfo_wx2 ginfo_wy2 ginfo_vx ginfo_vy ginfo_sizex ginfo_sizey ginfo_winx ginfo_winy ginfo_mesx ginfo_mesy ginfo_r ginfo_g ginfo_b ginfo_paluse ginfo_dispx ginfo_dispy ginfo_cx ginfo_cy ginfo_intid ginfo_newid ginfo_sx ginfo_sy objinfo_mode objinfo_bmscr objinfo_hwnd notemax notesize dir_cur dir_exe dir_win dir_sys dir_cmdline dir_desktop dir_mydoc dir_tv font_normal font_bold font_italic font_underline font_strikeout font_antialias objmode_normal objmode_guifont objmode_usefont gsquare_grad msgothic msmincho do until while wend for next _break _continue switch case default swbreak swend ddim ldim alloc m_pi rad2deg deg2rad ease_linear ease_quad_in ease_quad_out ease_quad_inout ease_cubic_in ease_cubic_out ease_cubic_inout ease_quartic_in ease_quartic_out ease_quartic_inout ease_bounce_in ease_bounce_out ease_bounce_inout ease_shake_in ease_shake_out ease_shake_inout ease_loop'\n    },\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n\n      {\n        // multi-line string\n        className: 'string',\n        begin: /\\{\"/,\n        end: /\"\\}/,\n        contains: [ hljs.BACKSLASH_ESCAPE ]\n      },\n\n      hljs.COMMENT(';', '$', { relevance: 0 }),\n\n      {\n        // pre-processor\n        className: 'meta',\n        begin: '#',\n        end: '$',\n        keywords: { keyword: 'addion cfunc cmd cmpopt comfunc const defcfunc deffunc define else endif enum epack func global if ifdef ifndef include modcfunc modfunc modinit modterm module pack packopt regcmd runtime undef usecom uselib' },\n        contains: [\n          hljs.inherit(hljs.QUOTE_STRING_MODE, { className: 'string' }),\n          hljs.NUMBER_MODE,\n          hljs.C_NUMBER_MODE,\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE\n        ]\n      },\n\n      {\n        // label\n        className: 'symbol',\n        begin: '^\\\\*(\\\\w+|@)'\n      },\n\n      hljs.NUMBER_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = hsp;\n","/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: protocols, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\nfunction http(hljs) {\n  const regex = hljs.regex;\n  const VERSION = 'HTTP/([32]|1\\\\.[01])';\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  const HEADER = {\n    className: 'attribute',\n    begin: regex.concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: { contains: [\n      {\n        className: \"punctuation\",\n        begin: /: /,\n        relevance: 0,\n        starts: {\n          end: '$',\n          relevance: 0\n        }\n      }\n    ] }\n  };\n  const HEADERS_AND_BODY = [\n    HEADER,\n    {\n      begin: '\\\\n\\\\n',\n      starts: {\n        subLanguage: [],\n        endsWithParent: true\n      }\n    }\n  ];\n\n  return {\n    name: 'HTTP',\n    aliases: [ 'https' ],\n    illegal: /\\S/,\n    contains: [\n      // response\n      {\n        begin: '^(?=' + VERSION + \" \\\\d{3})\",\n        end: /$/,\n        contains: [\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'number',\n            begin: '\\\\b\\\\d{3}\\\\b'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // request\n      {\n        begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n        end: /$/,\n        contains: [\n          {\n            className: 'string',\n            begin: ' ',\n            end: ' ',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'keyword',\n            begin: '[A-Z]+'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // to allow headers to work even without a preamble\n      hljs.inherit(HEADER, { relevance: 0 })\n    ]\n  };\n}\n\nmodule.exports = http;\n","/*\nLanguage: Hy\nDescription: Hy is a wonderful dialect of Lisp that’s embedded in Python.\nAuthor: Sergey Sobko <s.sobko@profitware.ru>\nWebsite: http://docs.hylang.org/en/stable/\nCategory: lisp\n*/\n\nfunction hy(hljs) {\n  const SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  const SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  const keywords = {\n    $pattern: SYMBOL_RE,\n    built_in:\n      // keywords\n      '!= % %= & &= * ** **= *= *map '\n      + '+ += , --build-class-- --import-- -= . / // //= '\n      + '/= < << <<= <= = > >= >> >>= '\n      + '@ @= ^ ^= abs accumulate all and any ap-compose '\n      + 'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe '\n      + 'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast '\n      + 'callable calling-module-name car case cdr chain chr coll? combinations compile '\n      + 'compress cond cons cons? continue count curry cut cycle dec '\n      + 'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn '\n      + 'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir '\n      + 'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? '\n      + 'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first '\n      + 'flatten float? fn fnc fnr for for* format fraction genexpr '\n      + 'gensym get getattr global globals group-by hasattr hash hex id '\n      + 'identity if if* if-not if-python2 import in inc input instance? '\n      + 'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even '\n      + 'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none '\n      + 'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass '\n      + 'iter iterable? iterate iterator? keyword keyword? lambda last len let '\n      + 'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all '\n      + 'map max merge-with method-decorator min multi-decorator multicombinations name neg? next '\n      + 'none? nonlocal not not-in not? nth numeric? oct odd? open '\n      + 'or ord partition permutations pos? post-route postwalk pow prewalk print '\n      + 'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str '\n      + 'recursive-replace reduce remove repeat repeatedly repr require rest round route '\n      + 'route-with-methods rwm second seq set-comp setattr setv some sorted string '\n      + 'string? sum switch symbol? take take-nth take-while tee try unless '\n      + 'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms '\n      + 'xi xor yield yield-from zero? zip zip-longest | |= ~'\n  };\n\n  const SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  const SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  const COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    { relevance: 0 }\n  );\n  const LITERAL = {\n    className: 'literal',\n    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n  };\n  const COLLECTION = {\n    begin: '[\\\\[\\\\{]',\n    end: '[\\\\]\\\\}]',\n    relevance: 0\n  };\n  const HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  const HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  const KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  const LIST = {\n    begin: '\\\\(',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  const NAME = {\n    className: 'name',\n    relevance: 0,\n    keywords: keywords,\n    begin: SYMBOL_RE,\n    starts: BODY\n  };\n  const DEFAULT_CONTAINS = [\n    LIST,\n    STRING,\n    HINT,\n    HINT_COL,\n    COMMENT,\n    KEY,\n    COLLECTION,\n    NUMBER,\n    LITERAL,\n    SYMBOL\n  ];\n\n  LIST.contains = [\n    hljs.COMMENT('comment', ''),\n    NAME,\n    BODY\n  ];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n\n  return {\n    name: 'Hy',\n    aliases: [ 'hylang' ],\n    illegal: /\\S/,\n    contains: [\n      hljs.SHEBANG(),\n      LIST,\n      STRING,\n      HINT,\n      HINT_COL,\n      COMMENT,\n      KEY,\n      COLLECTION,\n      NUMBER,\n      LITERAL\n    ]\n  };\n}\n\nmodule.exports = hy;\n","/*\nLanguage: Inform 7\nAuthor: Bruno Dias <bruno.r.dias@gmail.com>\nDescription: Language definition for Inform 7, a DSL for writing parser interactive fiction.\nWebsite: http://inform7.com\nCategory: gaming\n*/\n\nfunction inform7(hljs) {\n  const START_BRACKET = '\\\\[';\n  const END_BRACKET = '\\\\]';\n  return {\n    name: 'Inform 7',\n    aliases: [ 'i7' ],\n    case_insensitive: true,\n    keywords: {\n      // Some keywords more or less unique to I7, for relevance.\n      keyword:\n        // kind:\n        'thing room person man woman animal container '\n        + 'supporter backdrop door '\n        // characteristic:\n        + 'scenery open closed locked inside gender '\n        // verb:\n        + 'is are say understand '\n        // misc keyword:\n        + 'kind of rule' },\n    contains: [\n      {\n        className: 'string',\n        begin: '\"',\n        end: '\"',\n        relevance: 0,\n        contains: [\n          {\n            className: 'subst',\n            begin: START_BRACKET,\n            end: END_BRACKET\n          }\n        ]\n      },\n      {\n        className: 'section',\n        begin: /^(Volume|Book|Part|Chapter|Section|Table)\\b/,\n        end: '$'\n      },\n      {\n        // Rule definition\n        // This is here for relevance.\n        begin: /^(Check|Carry out|Report|Instead of|To|Rule|When|Before|After)\\b/,\n        end: ':',\n        contains: [\n          {\n            // Rule name\n            begin: '\\\\(This',\n            end: '\\\\)'\n          }\n        ]\n      },\n      {\n        className: 'comment',\n        begin: START_BRACKET,\n        end: END_BRACKET,\n        contains: [ 'self' ]\n      }\n    ]\n  };\n}\n\nmodule.exports = inform7;\n","/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)\\}/ }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = regex.concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: [ 'toml' ],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = ini;\n"],"names":["module","exports","hljs","name","keywords","keyword","literal","contains","HASH_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","className","begin","case_insensitive","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","APOS_STRING_MODE","NUMBER_MODE","REGEXP_MODE","regex","aliases","disableAutodetect","scope","match","relevance","end","excludeEnd","concat","lookahead","illegal","variants","obj","IDENT_RE","COMMENT","REGEXP","BACKSLASH_ESCAPE","NUMBER","BINARY_NUMBER_MODE","STRING","CLASS_DEFINITION","UNDERSCORE_IDENT_RE","type","SHEBANG","binary","excludeBegin","subLanguage","returnBegin","endsWithParent","BUILT_INS","$pattern","built_in","BRACKET_QUOTED_ID_REGEX","PLAIN_ID_REGEX","ANY_ID","either","IDENTIFIER_REGEX","optional","anyNumberOfTimes","HASH_PARAM_REGEX","HELPER_NAME_OR_PATH_EXPRESSION","HELPER_PARAMETER","inherit","SUB_EXPRESSION","HASH","starts","HELPER_PARAMETERS","returnEnd","SUB_EXPRESSION_CONTENTS","OPENING_BLOCK_MUSTACHE_CONTENTS","CLOSING_BLOCK_MUSTACHE_CONTENTS","BASIC_MUSTACHE_CONTENTS","skip","decimalDigits","hexDigits","symbol","PRAGMA","PREPROCESSOR","CONSTRUCTOR","LIST","TITLE_MODE","unicodeRegex","beginKeywords","VERSION","HEADER","HEADERS_AND_BODY","SYMBOLSTART","SYMBOL_RE","SYMBOL","LITERAL","COLLECTION","HINT","HINT_COL","KEY","BODY","NAME","DEFAULT_CONTAINS","NUMBERS","NUMBER_RE","COMMENTS","VARIABLES","LITERALS","STRINGS","ARRAY","ANY_KEY"],"sourceRoot":""}