{"version":3,"file":"8915.js","mappings":"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","sources":["webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/src/js/build-html.js","webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/src/js/default-options.js","webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/src/js/parse-content.js","webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/src/js/scroll-smooth/index.js","webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/src/js/index-esm.js","webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/src/js/update-toc-scroll.js","webpack://sakurairo-scripts/./node_modules/.pnpm/tocbot@4.33.0/node_modules/tocbot/index.js"],"sourcesContent":["/**\n * This file is responsible for building the DOM and updating DOM state.\n *\n * @author Tim Scanlin\n */\n\nexport default function (options) {\n  const forEach = [].forEach\n  const some = [].some\n  const body = typeof window !== 'undefined' && document.body\n  const SPACE_CHAR = ' '\n  let tocElement\n  let currentlyHighlighting = true\n\n  /**\n   * Create link and list elements.\n   * @param {Object} d\n   * @param {HTMLElement} container\n   * @return {HTMLElement}\n   */\n  function createEl (d, container) {\n    const link = container.appendChild(createLink(d))\n    if (d.children.length) {\n      const list = createList(d.isCollapsed)\n      d.children.forEach((child) => {\n        createEl(child, list)\n      })\n      link.appendChild(list)\n    }\n  }\n\n  /**\n   * Render nested heading array data into a given element.\n   * @param {HTMLElement} parent Optional. If provided updates the {@see tocElement} to match.\n   * @param {Array} data\n   * @return {HTMLElement}\n   */\n  function render (parent, data) {\n    const collapsed = false\n    const container = createList(collapsed)\n\n    data.forEach((d) => {\n      createEl(d, container)\n    })\n\n    // Return if no TOC element is provided or known.\n    tocElement = parent || tocElement\n    if (tocElement === null) {\n      return\n    }\n\n    // Remove existing child if it exists.\n    if (tocElement.firstChild) {\n      tocElement.removeChild(tocElement.firstChild)\n    }\n\n    // Just return the parent and don't append the list if no links are found.\n    if (data.length === 0) {\n      return tocElement\n    }\n\n    // Append the Elements that have been created\n    return tocElement.appendChild(container)\n  }\n\n  /**\n   * Create link element.\n   * @param {Object} data\n   * @return {HTMLElement}\n   */\n  function createLink (data) {\n    const item = document.createElement('li')\n    const a = document.createElement('a')\n    if (options.listItemClass) {\n      item.setAttribute('class', options.listItemClass)\n    }\n\n    if (options.onClick) {\n      a.onclick = options.onClick\n    }\n\n    if (options.includeTitleTags) {\n      a.setAttribute('title', data.textContent)\n    }\n\n    if (options.includeHtml && data.childNodes.length) {\n      forEach.call(data.childNodes, (node) => {\n        a.appendChild(node.cloneNode(true))\n      })\n    } else {\n      // Default behavior. Set to textContent to keep tests happy.\n      a.textContent = data.textContent\n    }\n    a.setAttribute('href', `${options.basePath}#${data.id}`)\n    a.setAttribute('class', `${options.linkClass +\n      SPACE_CHAR}node-name--${data.nodeName}${SPACE_CHAR}${options.extraLinkClasses}`)\n    item.appendChild(a)\n    return item\n  }\n\n  /**\n   * Create list element.\n   * @param {Boolean} isCollapsed\n   * @return {HTMLElement}\n   */\n  function createList (isCollapsed) {\n    const listElement = (options.orderedList) ? 'ol' : 'ul'\n    const list = document.createElement(listElement)\n    let classes = options.listClass + SPACE_CHAR + options.extraListClasses\n    if (isCollapsed) {\n      // No plus/equals here fixes compilation issue.\n      classes = classes + SPACE_CHAR + options.collapsibleClass\n      classes = classes + SPACE_CHAR + options.isCollapsedClass\n    }\n    list.setAttribute('class', classes)\n    return list\n  }\n\n  /**\n   * Update fixed sidebar class.\n   * @return {HTMLElement}\n   */\n  function updateFixedSidebarClass () {\n    const scrollTop = getScrollTop()\n\n    const posFixedEl = document.querySelector(options.positionFixedSelector)\n    if (options.fixedSidebarOffset === 'auto') {\n      options.fixedSidebarOffset = tocElement.offsetTop\n    }\n\n    if (scrollTop > options.fixedSidebarOffset) {\n      if (posFixedEl.className.indexOf(options.positionFixedClass) === -1) {\n        posFixedEl.className += SPACE_CHAR + options.positionFixedClass\n      }\n    } else {\n      posFixedEl.className = posFixedEl.className.replace(SPACE_CHAR + options.positionFixedClass, '')\n    }\n  }\n\n  /**\n   * Get top position of heading\n   * @param {HTMLElement} obj\n   * @return {int} position\n   */\n  function getHeadingTopPos (obj) {\n    let position = 0\n    if (obj !== null) {\n      position = obj.offsetTop\n      if (options.hasInnerContainers) { position += getHeadingTopPos(obj.offsetParent) }\n    }\n    return position\n  }\n\n  /**\n   * Update className only when changed.\n   * @param {HTMLElement} obj\n   * @param {string} className\n   * @return {HTMLElement} obj\n   */\n  function updateClassname (obj, className) {\n    if (obj && obj.className !== className) {\n      obj.className = className\n    }\n    return obj\n  }\n\n  /**\n   * Update TOC highlighting and collapsed groupings.\n   */\n  function updateToc (headingsArray, event) {\n    // Add fixed class at offset\n    if (options.positionFixedSelector) {\n      updateFixedSidebarClass()\n    }\n    // Get the top most heading currently visible on the page so we know what to highlight.\n    const headings = headingsArray\n\n    const clickedHref = event?.target?.getAttribute('href') || null\n    const isBottomMode = clickedHref && clickedHref.charAt(0) === '#' ? getIsHeaderBottomMode(clickedHref.replace('#', '')) : false\n    const shouldUpdate = currentlyHighlighting || isBottomMode\n\n    if (shouldUpdate &&\n      !!tocElement &&\n      headings.length > 0) {\n      const topHeader = getTopHeader(headings)\n\n      const oldActiveTocLink = tocElement.querySelector(`.${options.activeLinkClass}`)\n\n      const topHeaderId = topHeader.id.replace(/([ #;&,.+*~':\"!^$[\\]()=>|/\\\\@])/g, '\\\\$1')\n      const hashId = window.location.hash.replace('#', '')\n      let activeId = topHeaderId\n\n      if (clickedHref && isBottomMode) {\n        activeId = clickedHref.replace('#', '')\n      } else if (hashId && hashId !== topHeaderId) {\n        activeId = hashId\n      }\n\n      const activeTocLink = tocElement\n        .querySelector(`.${options.linkClass}[href=\"${options.basePath}#${activeId}\"]`)\n      // Performance improvement to only change the classes\n      // for the toc if a new link should be highlighted.\n      if (oldActiveTocLink === activeTocLink) {\n        return\n      }\n\n      // Remove the active class from the other tocLinks.\n      const tocLinks = tocElement\n        .querySelectorAll(`.${options.linkClass}`)\n      forEach.call(tocLinks, (tocLink) => {\n        updateClassname(tocLink, tocLink.className.replace(SPACE_CHAR + options.activeLinkClass, ''))\n      })\n      const tocLis = tocElement\n        .querySelectorAll(`.${options.listItemClass}`)\n      forEach.call(tocLis, (tocLi) => {\n        updateClassname(tocLi, tocLi.className.replace(SPACE_CHAR + options.activeListItemClass, ''))\n      })\n\n      // Add the active class to the active tocLink.\n      if (activeTocLink && activeTocLink.className.indexOf(options.activeLinkClass) === -1) {\n        activeTocLink.className += SPACE_CHAR + options.activeLinkClass\n      }\n      const li = activeTocLink?.parentNode\n      if (li && li.className.indexOf(options.activeListItemClass) === -1) {\n        li.className += SPACE_CHAR + options.activeListItemClass\n      }\n\n      const tocLists = tocElement\n        .querySelectorAll(`.${options.listClass}.${options.collapsibleClass}`)\n\n      // Collapse the other collapsible lists.\n      forEach.call(tocLists, (list) => {\n        if (list.className.indexOf(options.isCollapsedClass) === -1) {\n          list.className += SPACE_CHAR + options.isCollapsedClass\n        }\n      })\n\n      // Expand the active link's collapsible list and its sibling if applicable.\n      if (activeTocLink?.nextSibling && activeTocLink.nextSibling.className.indexOf(options.isCollapsedClass) !== -1) {\n        updateClassname(activeTocLink.nextSibling, activeTocLink.nextSibling.className.replace(SPACE_CHAR + options.isCollapsedClass, ''))\n      }\n      removeCollapsedFromParents(activeTocLink?.parentNode.parentNode)\n    }\n  }\n\n  /**\n   * Remove collapsed class from parent elements.\n   * @param {HTMLElement} element\n   * @return {HTMLElement}\n   */\n  function removeCollapsedFromParents (element) {\n    if (element && element.className.indexOf(options.collapsibleClass) !== -1 && element.className.indexOf(options.isCollapsedClass) !== -1) {\n      updateClassname(element, element.className.replace(SPACE_CHAR + options.isCollapsedClass, ''))\n      return removeCollapsedFromParents(element.parentNode.parentNode)\n    }\n    return element\n  }\n\n  /**\n   * Disable TOC Animation when a link is clicked.\n   * @param {Event} event\n   */\n  function disableTocAnimation (event) {\n    const target = event.target || event.srcElement\n    if (typeof target.className !== 'string' || target.className.indexOf(options.linkClass) === -1) {\n      return\n    }\n    // Bind to tocLink clicks to temporarily disable highlighting\n    // while smoothScroll is animating.\n    currentlyHighlighting = false\n  }\n\n  /**\n   * Enable TOC Animation.\n   */\n  function enableTocAnimation () {\n    currentlyHighlighting = true\n  }\n\n  /**\n   * Return currently highlighting status.\n   */\n  function getCurrentlyHighlighting () {\n    return currentlyHighlighting\n  }\n\n  function getIsHeaderBottomMode (headerId) {\n    const scrollEl = getScrollEl()\n    const activeHeading = scrollEl?.querySelector(`#${headerId}`)\n    const isBottomMode = activeHeading.offsetTop > scrollEl.offsetHeight - (scrollEl.clientHeight * 1.4) - options.bottomModeThreshold\n    return isBottomMode\n  }\n\n  function getIsPageBottomMode () {\n    const scrollEl = getScrollEl()\n    const isBottomMode = getScrollTop() + scrollEl.clientHeight > scrollEl.offsetHeight - options.bottomModeThreshold\n    return isBottomMode\n  }\n\n  function getScrollEl () {\n    let el\n    if (options.scrollContainer && document.querySelector(options.scrollContainer)) {\n      el = document.querySelector(options.scrollContainer)\n    } else {\n      el = document.documentElement || body\n    }\n    return el\n  }\n\n  function getScrollTop () {\n    const el = getScrollEl()\n    return el?.scrollTop || 0\n  }\n\n  function getTopHeader (headings, scrollTop = getScrollTop()) {\n    let topHeader\n    some.call(headings, (heading, i) => {\n      if (getHeadingTopPos(heading) > scrollTop + options.headingsOffset + 10) {\n        // Don't allow negative index value.\n        const index = (i === 0) ? i : i - 1\n        topHeader = headings[index]\n        return true\n      }\n      if (i === headings.length - 1) {\n        // This allows scrolling for the last heading on the page.\n        topHeader = headings[headings.length - 1]\n        return true\n      }\n    })\n    return topHeader\n  }\n\n  function updateUrlHashForHeader (headingsArray) {\n    const scrollTop = getScrollTop()\n    const topHeader = getTopHeader(headingsArray, scrollTop)\n    if (!topHeader || scrollTop < 5) {\n      if (!(window.location.hash === '#' || window.location.hash === '')) {\n        window.history.pushState(null, null, '#')\n      }\n    } else if (topHeader && !getIsPageBottomMode()) {\n      const newHash = `#${topHeader.id}`\n      if (window.location.hash !== newHash) {\n        window.history.pushState(null, null, newHash)\n      }\n    }\n  }\n\n  return {\n    enableTocAnimation,\n    disableTocAnimation,\n    render,\n    updateToc,\n    getCurrentlyHighlighting,\n    getTopHeader,\n    getScrollTop,\n    updateUrlHashForHeader\n  }\n}\n","export default {\n  // Where to render the table of contents.\n  tocSelector: '.js-toc',\n  // Or, you can pass in a DOM node instead\n  tocElement: null,\n  // Where to grab the headings to build the table of contents.\n  contentSelector: '.js-toc-content',\n  // Or, you can pass in a DOM node instead\n  contentElement: null,\n  // Which headings to grab inside of the contentSelector element.\n  headingSelector: 'h1, h2, h3',\n  // Headings that match the ignoreSelector will be skipped.\n  ignoreSelector: '.js-toc-ignore',\n  // For headings inside relative or absolute positioned\n  // containers within content.\n  hasInnerContainers: false,\n  // Main class to add to links.\n  linkClass: 'toc-link',\n  // Extra classes to add to links.\n  extraLinkClasses: '',\n  // Class to add to active links,\n  // the link corresponding to the top most heading on the page.\n  activeLinkClass: 'is-active-link',\n  // Main class to add to lists.\n  listClass: 'toc-list',\n  // Extra classes to add to lists.\n  extraListClasses: '',\n  // Class that gets added when a list should be collapsed.\n  isCollapsedClass: 'is-collapsed',\n  // Class that gets added when a list should be able\n  // to be collapsed but isn't necessarily collapsed.\n  collapsibleClass: 'is-collapsible',\n  // Class to add to list items.\n  listItemClass: 'toc-list-item',\n  // Class to add to active list items.\n  activeListItemClass: 'is-active-li',\n  // How many heading levels should not be collapsed.\n  // For example, number 6 will show everything since\n  // there are only 6 heading levels and number 0 will collapse them all.\n  // The sections that are hidden will open\n  // and close as you scroll to headings within them.\n  collapseDepth: 0,\n  // Smooth scrolling enabled.\n  scrollSmooth: true,\n  // Smooth scroll duration.\n  scrollSmoothDuration: 420,\n  // Smooth scroll offset.\n  scrollSmoothOffset: 0,\n  // Callback for scroll end.\n  scrollEndCallback: function (e) {},\n  // Headings offset between the headings and the top of\n  // the document (this is meant for minor adjustments).\n  headingsOffset: 1,\n  // Timeout between events firing to make sure it's\n  // not too rapid (for performance reasons).\n  throttleTimeout: 50,\n  // Element to add the positionFixedClass to.\n  positionFixedSelector: null,\n  // Fixed position class to add to make sidebar fixed after scrolling\n  // down past the fixedSidebarOffset.\n  positionFixedClass: 'is-position-fixed',\n  // fixedSidebarOffset can be any number but by default is set\n  // to auto which sets the fixedSidebarOffset to the sidebar\n  // element's offsetTop from the top of the document on init.\n  fixedSidebarOffset: 'auto',\n  // includeHtml can be set to true to include the HTML markup from the\n  // heading node instead of just including the innerText.\n  includeHtml: false,\n  // includeTitleTags automatically sets the html title tag of the link\n  // to match the title. This can be useful for SEO purposes or\n  // when truncating titles.\n  includeTitleTags: false,\n  // onclick function to apply to all links in toc. will be called with\n  // the event as the first parameter, and this can be used to stop,\n  // propagation, prevent default or perform action\n  onClick: function (e) {},\n  // orderedList can be set to false to generate unordered lists (ul)\n  // instead of ordered lists (ol)\n  orderedList: true,\n  // If there is a fixed article scroll container, set to calculate offset.\n  scrollContainer: null,\n  // prevent ToC DOM rendering if it's already rendered by an external system.\n  skipRendering: false,\n  // Optional callback to change heading labels.\n  // For example it can be used to cut down and put ellipses on multiline headings you deem too long.\n  // Called each time a heading is parsed. Expects a string and returns the modified label to display.\n  // Additionally, the attribute `data-heading-label` may be used on a heading to specify\n  // a shorter string to be used in the TOC.\n  // function (string) => string\n  headingLabelCallback: false,\n  // ignore headings that are hidden in DOM\n  ignoreHiddenElements: false,\n  // Optional callback to modify properties of parsed headings.\n  // The heading element is passed in node parameter and information\n  // parsed by default parser is provided in obj parameter.\n  // Function has to return the same or modified obj.\n  // The heading will be excluded from TOC if nothing is returned.\n  // function (object, HTMLElement) => object | void\n  headingObjectCallback: null,\n  // Set the base path, useful if you use a `base` tag in `head`.\n  basePath: '',\n  // Only takes affect when `tocSelector` is scrolling,\n  // keep the toc scroll position in sync with the content.\n  disableTocScrollSync: false,\n  // If this is null then just use `tocElement` or `tocSelector` instead\n  // assuming `disableTocScrollSync` is set to false. This allows for\n  // scrolling an outer element (like a nav panel w/ search) containing the toc.\n  // Please pass an element, not a selector here.\n  tocScrollingWrapper: null,\n  // Offset for the toc scroll (top) position when scrolling the page.\n  // Only effective if `disableTocScrollSync` is false.\n  tocScrollOffset: 30,\n  // Enable the URL hash to update with the proper heading ID as\n  // a user scrolls the page.\n  enableUrlHashUpdateOnScroll: false,\n  // Threshold for when bottom mode should be enabled to handle\n  // highlighting links that cannot be scrolled to.\n  bottomModeThreshold: 30\n}\n","/**\n * This file is responsible for parsing the content from the DOM and making\n * sure data is nested properly.\n *\n * @author Tim Scanlin\n */\n\nexport default function parseContent (options) {\n  const reduce = [].reduce\n\n  /**\n   * Get the last item in an array and return a reference to it.\n   * @param {Array} array\n   * @return {Object}\n   */\n  function getLastItem (array) {\n    return array[array.length - 1]\n  }\n\n  /**\n   * Get heading level for a heading dom node.\n   * @param {HTMLElement} heading\n   * @return {Number}\n   */\n  function getHeadingLevel (heading) {\n    return +heading.nodeName.toUpperCase().replace('H', '')\n  }\n\n  /**\n   * Determine whether the object is an HTML Element.\n   * Also works inside iframes. HTML Elements might be created by the parent document.\n   * @param {Object} maybeElement\n   * @return {Number}\n   */\n  function isHTMLElement (maybeElement) {\n    try {\n      return (\n        maybeElement instanceof window.HTMLElement ||\n        maybeElement instanceof window.parent.HTMLElement\n      )\n    } catch (e) {\n      return maybeElement instanceof window.HTMLElement\n    }\n  }\n\n  /**\n   * Get important properties from a heading element and store in a plain object.\n   * @param {HTMLElement} heading\n   * @return {Object}\n   */\n  function getHeadingObject (heading) {\n    // each node is processed twice by this method because nestHeadingsArray() and addNode() calls it\n    // first time heading is real DOM node element, second time it is obj\n    // that is causing problem so I am processing only original DOM node\n    if (!isHTMLElement(heading)) return heading\n\n    if (options.ignoreHiddenElements && (!heading.offsetHeight || !heading.offsetParent)) {\n      return null\n    }\n\n    const headingLabel = heading.getAttribute('data-heading-label') ||\n      (options.headingLabelCallback ? String(options.headingLabelCallback(heading.innerText)) : (heading.innerText || heading.textContent).trim())\n    const obj = {\n      id: heading.id,\n      children: [],\n      nodeName: heading.nodeName,\n      headingLevel: getHeadingLevel(heading),\n      textContent: headingLabel\n    }\n\n    if (options.includeHtml) {\n      obj.childNodes = heading.childNodes\n    }\n\n    if (options.headingObjectCallback) {\n      return options.headingObjectCallback(obj, heading)\n    }\n\n    return obj\n  }\n\n  /**\n   * Add a node to the nested array.\n   * @param {Object} node\n   * @param {Array} nest\n   * @return {Array}\n   */\n  function addNode (node, nest) {\n    const obj = getHeadingObject(node)\n    const level = obj.headingLevel\n    let array = nest\n    let lastItem = getLastItem(array)\n    const lastItemLevel = lastItem\n      ? lastItem.headingLevel\n      : 0\n    let counter = level - lastItemLevel\n\n    while (counter > 0) {\n      lastItem = getLastItem(array)\n      // Handle case where there are multiple h5+ in a row.\n      if (lastItem && level === lastItem.headingLevel) {\n        break\n      } else if (lastItem && lastItem.children !== undefined) {\n        array = lastItem.children\n      }\n      counter--\n    }\n\n    if (level >= options.collapseDepth) {\n      obj.isCollapsed = true\n    }\n\n    array.push(obj)\n    return array\n  }\n\n  /**\n   * Select headings in content area, exclude any selector in options.ignoreSelector\n   * @param {HTMLElement} contentElement\n   * @param {Array} headingSelector\n   * @return {Array}\n   */\n  function selectHeadings (contentElement, headingSelector) {\n    let selectors = headingSelector\n    if (options.ignoreSelector) {\n      selectors = headingSelector.split(',')\n        .map(function mapSelectors (selector) {\n          return `${selector.trim()}:not(${options.ignoreSelector})`\n        })\n    }\n    try {\n      return contentElement.querySelectorAll(selectors)\n    } catch (e) {\n      console.warn(`Headers not found with selector: ${selectors}`); // eslint-disable-line\n      return null\n    }\n  }\n\n  /**\n   * Nest headings array into nested arrays with 'children' property.\n   * @param {Array} headingsArray\n   * @return {Object}\n   */\n  function nestHeadingsArray (headingsArray) {\n    return reduce.call(headingsArray, function reducer (prev, curr) {\n      const currentHeading = getHeadingObject(curr)\n      if (currentHeading) {\n        addNode(currentHeading, prev.nest)\n      }\n      return prev\n    }, {\n      nest: []\n    })\n  }\n\n  return {\n    nestHeadingsArray,\n    selectHeadings\n  }\n}\n","/* eslint no-var: off */\n/* globals location, requestAnimationFrame */\n\nexport default function initSmoothScrolling (options) {\n  // if (isCssSmoothSCrollSupported()) { return }\n\n  var duration = options.duration\n  var offset = options.offset\n  if (typeof window === 'undefined' || typeof location === 'undefined') return\n\n  var pageUrl = location.hash\n    ? stripHash(location.href)\n    : location.href\n\n  delegatedLinkHijacking()\n\n  function delegatedLinkHijacking () {\n    document.body.addEventListener('click', onClick, false)\n\n    function onClick (e) {\n      if (\n        !isInPageLink(e.target) ||\n        e.target.className.indexOf('no-smooth-scroll') > -1 ||\n        (e.target.href.charAt(e.target.href.length - 2) === '#' &&\n        e.target.href.charAt(e.target.href.length - 1) === '!') ||\n        e.target.className.indexOf(options.linkClass) === -1) {\n        return\n      }\n\n      // Don't prevent default or hash doesn't change.\n      // e.preventDefault()\n\n      jump(e.target.hash, {\n        duration,\n        offset,\n        callback: function () {\n          setFocus(e.target.hash)\n        }\n      })\n    }\n  }\n\n  function isInPageLink (n) {\n    return n.tagName.toLowerCase() === 'a' &&\n      (n.hash.length > 0 || n.href.charAt(n.href.length - 1) === '#') &&\n      (stripHash(n.href) === pageUrl || stripHash(n.href) + '#' === pageUrl)\n  }\n\n  function stripHash (url) {\n    return url.slice(0, url.lastIndexOf('#'))\n  }\n\n  // function isCssSmoothSCrollSupported () {\n  //   return 'scrollBehavior' in document.documentElement.style\n  // }\n\n  // Adapted from:\n  // https://www.nczonline.net/blog/2013/01/15/fixing-skip-to-content-links/\n  function setFocus (hash) {\n    var element = document.getElementById(hash.substring(1))\n\n    if (element) {\n      if (!/^(?:a|select|input|button|textarea)$/i.test(element.tagName)) {\n        element.tabIndex = -1\n      }\n\n      element.focus()\n    }\n  }\n}\n\nfunction jump (target, options) {\n  var start = window.pageYOffset\n  var opt = {\n    duration: options.duration,\n    offset: options.offset || 0,\n    callback: options.callback,\n    easing: options.easing || easeInOutQuad\n  }\n  // This makes ids that start with a number work: ('[id=\"' + decodeURI(target).split('#').join('') + '\"]')\n  // DecodeURI for nonASCII hashes, they was encoded, but id was not encoded, it lead to not finding the tgt element by id.\n  // And this is for IE: document.body.scrollTop\n  // Handle decoded and non-decoded URIs since sometimes URLs automatically transform them (support for internation chars).\n  var tgt = document.querySelector('[id=\"' + decodeURI(target).split('#').join('') + '\"]') ||\n    document.querySelector('[id=\"' + (target).split('#').join('') + '\"]')\n  var distance = typeof target === 'string'\n    ? opt.offset + (\n      target\n        ? (tgt && tgt.getBoundingClientRect().top) || 0 // handle non-existent links better.\n        : -(document.documentElement.scrollTop || document.body.scrollTop))\n    : target\n  var duration = typeof opt.duration === 'function'\n    ? opt.duration(distance)\n    : opt.duration\n  var timeStart\n  var timeElapsed\n\n  requestAnimationFrame(function (time) { timeStart = time; loop(time) })\n  function loop (time) {\n    timeElapsed = time - timeStart\n\n    window.scrollTo(0, opt.easing(timeElapsed, start, distance, duration))\n\n    if (timeElapsed < duration) { requestAnimationFrame(loop) } else { end() }\n  }\n\n  function end () {\n    window.scrollTo(0, start + distance)\n\n    if (typeof opt.callback === 'function') { opt.callback() }\n  }\n\n  // Robert Penner's easeInOutQuad - http://robertpenner.com/easing/\n  function easeInOutQuad (t, b, c, d) {\n    t /= d / 2\n    if (t < 1) return c / 2 * t * t + b\n    t--\n    return -c / 2 * (t * (t - 2) - 1) + b\n  }\n}\n","/* eslint no-var: off */\n/**\n * Tocbot\n * Tocbot creates a table of contents based on HTML headings on a page,\n * this allows users to easily jump to different sections of the document.\n * Tocbot was inspired by tocify (http://gregfranko.com/jquery.tocify.js/).\n * The main differences are that it works natively without any need for jquery or jquery UI).\n *\n * @author Tim Scanlin\n */\n\nimport BuildHtml from './build-html.js'\nimport defaultOptions from './default-options.js'\nimport ParseContent from './parse-content.js'\nimport initSmoothScrolling from './scroll-smooth/index.js'\nimport updateTocScroll from './update-toc-scroll.js'\n\n// For testing purposes.\nexport let _options = {} // Object to store current options.\nexport let _buildHtml\nexport let _parseContent\nexport let _headingsArray\nexport let _scrollListener\n\nlet clickListener\n\n/**\n * Initialize tocbot.\n * @param {object} customOptions\n */\nexport function init (customOptions) {\n  // Merge defaults with user options.\n  // Set to options variable at the top.\n  _options = extend(defaultOptions, customOptions || {})\n\n  // Init smooth scroll if enabled (default).\n  if (_options.scrollSmooth) {\n    _options.duration = _options.scrollSmoothDuration\n    _options.offset = _options.scrollSmoothOffset\n\n    initSmoothScrolling(_options)\n  }\n\n  // Pass options to these modules.\n  _buildHtml = BuildHtml(_options)\n  _parseContent = ParseContent(_options)\n\n  // Destroy it if it exists first.\n  destroy()\n\n  const contentElement = getContentElement(_options)\n  if (contentElement === null) {\n    return\n  }\n\n  const tocElement = getTocElement(_options)\n  if (tocElement === null) {\n    return\n  }\n\n  // Get headings array.\n  _headingsArray = _parseContent.selectHeadings(\n    contentElement,\n    _options.headingSelector\n  )\n\n  // Return if no headings are found.\n  if (_headingsArray === null) {\n    return\n  }\n\n  // Build nested headings array.\n  const nestedHeadingsObj = _parseContent.nestHeadingsArray(_headingsArray)\n  const nestedHeadings = nestedHeadingsObj.nest\n\n  // Render.\n  if (!_options.skipRendering) {\n    _buildHtml.render(tocElement, nestedHeadings)\n  } else {\n    // No need to attach listeners if skipRendering is true, this was causing errors.\n    return this\n  }\n\n  // Update Sidebar and bind listeners.\n  let isClick = false\n  _scrollListener = throttle((e) => {\n    _buildHtml.updateToc(_headingsArray)\n    // Only do this update for normal scrolls and not during clicks.\n    !_options.disableTocScrollSync && !isClick && updateTocScroll(_options)\n\n    if (_options.enableUrlHashUpdateOnScroll) {\n      const enableUpdatingHash = _buildHtml.getCurrentlyHighlighting()\n      enableUpdatingHash && _buildHtml.updateUrlHashForHeader(_headingsArray)\n    }\n\n    const isTop =\n      e?.target?.scrollingElement &&\n      e.target.scrollingElement.scrollTop === 0\n    if ((e && (e.eventPhase === 0 || e.currentTarget === null)) || isTop) {\n      _buildHtml.updateToc(_headingsArray)\n      if (_options.scrollEndCallback) {\n        _options.scrollEndCallback(e)\n      }\n    }\n  }, _options.throttleTimeout)\n  // Fire it initially to setup the page.\n  _scrollListener()\n\n  // Fire scroll listener on hash change to trigger highlighting changes too.\n  window.onhashchange = window.onscrollend = (e) => {\n    _scrollListener()\n  }\n\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener('scroll', _scrollListener, false)\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener('resize', _scrollListener, false)\n  } else {\n    document.addEventListener('scroll', _scrollListener, false)\n    document.addEventListener('resize', _scrollListener, false)\n  }\n\n  // Bind click listeners to disable animation.\n  let timeout = null\n  clickListener = throttle((event) => {\n    isClick = true\n    if (_options.scrollSmooth) {\n      _buildHtml.disableTocAnimation(event)\n    }\n    _buildHtml.updateToc(_headingsArray, event)\n    // Timeout to re-enable the animation.\n    timeout && clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      _buildHtml.enableTocAnimation()\n    }, _options.scrollSmoothDuration)\n    // Set is click w/ a bit of delay so that animations can finish\n    // and we don't disturb the user while they click the toc.\n    setTimeout(() => {\n      isClick = false\n    }, _options.scrollSmoothDuration + 100)\n  }, _options.throttleTimeout)\n\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .addEventListener('click', clickListener, false)\n  } else {\n    document.addEventListener('click', clickListener, false)\n  }\n}\n\n/**\n * Destroy tocbot.\n */\nexport function destroy () {\n  const tocElement = getTocElement(_options)\n  if (tocElement === null) {\n    return\n  }\n\n  if (!_options.skipRendering) {\n    // Clear HTML.\n    if (tocElement) {\n      tocElement.innerHTML = ''\n    }\n  }\n\n  // Remove event listeners.\n  if (\n    _options.scrollContainer &&\n    document.querySelector(_options.scrollContainer)\n  ) {\n    document\n      .querySelector(_options.scrollContainer)\n      .removeEventListener('scroll', _scrollListener, false)\n    document\n      .querySelector(_options.scrollContainer)\n      .removeEventListener('resize', _scrollListener, false)\n    if (_buildHtml) {\n      document\n        .querySelector(_options.scrollContainer)\n        .removeEventListener('click', clickListener, false)\n    }\n  } else {\n    document.removeEventListener('scroll', _scrollListener, false)\n    document.removeEventListener('resize', _scrollListener, false)\n    if (_buildHtml) {\n      document.removeEventListener('click', clickListener, false)\n    }\n  }\n}\n\n/**\n * Refresh tocbot.\n */\nexport function refresh (customOptions) {\n  destroy()\n  init(customOptions || _options)\n}\n\n// From: https://github.com/Raynos/xtend\nconst hasOwnProp = Object.prototype.hasOwnProperty\nfunction extend (...args) {\n  const target = {}\n  for (let i = 0; i < args.length; i++) {\n    const source = args[i]\n    for (const key in source) {\n      if (hasOwnProp.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\n// From: https://remysharp.com/2010/07/21/throttling-function-calls\nfunction throttle (fn, threshold, scope) {\n  threshold || (threshold = 250)\n  let last\n  let deferTimer\n  return function (...args) {\n    const context = scope || this\n    const now = +new Date()\n    if (last && now < last + threshold) {\n      // hold on to it\n      clearTimeout(deferTimer)\n      deferTimer = setTimeout(() => {\n        last = now\n        fn.apply(context, args)\n      }, threshold)\n    } else {\n      last = now\n      fn.apply(context, args)\n    }\n  }\n}\n\nfunction getContentElement (options) {\n  try {\n    return (\n      options.contentElement || document.querySelector(options.contentSelector)\n    )\n  } catch (e) {\n    console.warn(`Contents element not found: ${options.contentSelector}`) // eslint-disable-line\n    return null\n  }\n}\n\nfunction getTocElement (options) {\n  try {\n    return options.tocElement || document.querySelector(options.tocSelector)\n  } catch (e) {\n    console.warn(`TOC element not found: ${options.tocSelector}`) // eslint-disable-line\n    return null\n  }\n}\n\n// Add default export for easier use.\nconst tocbot = {\n  _options,\n  _buildHtml,\n  _parseContent,\n  init,\n  destroy,\n  refresh\n}\n\nexport default tocbot\n","\nexport default function updateTocScroll (options) {\n  const toc = options.tocScrollingWrapper || options.tocElement || document.querySelector(options.tocSelector)\n  if (toc && toc.scrollHeight > toc.clientHeight) {\n    const activeItem = toc.querySelector(`.${options.activeListItemClass}`)\n    if (activeItem) {\n      // Determine element top and bottom\n      const eTop = activeItem.offsetTop\n\n      // Check if out of view\n      // Above scroll view\n      const scrollAmount = eTop - options.tocScrollOffset\n      toc.scrollTop = scrollAmount > 0 ? scrollAmount : 0\n    }\n  }\n}\n","import { destroy, init, refresh } from './src/js/index-esm.js'\nconst tocbot = { destroy, init, refresh }\n\nexport { destroy, init, refresh }\nexport default tocbot\n"],"names":["options","forEach","some","body","window","document","SPACE_CHAR","tocElement","currentlyHighlighting","createEl","d","container","link","appendChild","data","item","createElement","a","listItemClass","setAttribute","onClick","onclick","includeTitleTags","textContent","includeHtml","childNodes","length","call","node","cloneNode","basePath","id","linkClass","nodeName","extraLinkClasses","createLink","children","list","createList","isCollapsed","child","listElement","classes","listClass","extraListClasses","collapsibleClass","isCollapsedClass","getHeadingTopPos","obj","position","offsetTop","hasInnerContainers","offsetParent","updateClassname","className","removeCollapsedFromParents","element","indexOf","replace","parentNode","getScrollEl","el","scrollContainer","querySelector","documentElement","getScrollTop","scrollTop","getTopHeader","headings","topHeader","heading","i","headingsOffset","enableTocAnimation","disableTocAnimation","event","target","srcElement","render","parent","firstChild","removeChild","updateToc","headingsArray","positionFixedSelector","posFixedEl","fixedSidebarOffset","positionFixedClass","updateFixedSidebarClass","clickedHref","getAttribute","isBottomMode","charAt","headerId","scrollEl","activeHeading","offsetHeight","clientHeight","bottomModeThreshold","getIsHeaderBottomMode","oldActiveTocLink","activeLinkClass","topHeaderId","hashId","location","hash","activeId","activeTocLink","tocLinks","querySelectorAll","tocLink","tocLis","tocLi","activeListItemClass","li","tocLists","nextSibling","getCurrentlyHighlighting","updateUrlHashForHeader","history","pushState","getIsPageBottomMode","newHash","tocSelector","contentSelector","contentElement","headingSelector","ignoreSelector","collapseDepth","scrollSmooth","scrollSmoothDuration","scrollSmoothOffset","scrollEndCallback","e","throttleTimeout","orderedList","skipRendering","headingLabelCallback","ignoreHiddenElements","headingObjectCallback","disableTocScrollSync","tocScrollingWrapper","tocScrollOffset","enableUrlHashUpdateOnScroll","parseContent","reduce","getLastItem","array","getHeadingLevel","toUpperCase","getHeadingObject","maybeElement","HTMLElement","isHTMLElement","headingLabel","String","innerText","trim","headingLevel","nestHeadingsArray","prev","curr","currentHeading","nest","level","lastItem","counter","undefined","push","addNode","selectHeadings","selectors","split","map","selector","console","warn","initSmoothScrolling","duration","offset","pageUrl","stripHash","href","addEventListener","n","tagName","toLowerCase","timeStart","timeElapsed","start","pageYOffset","opt","callback","easing","easeInOutQuad","tgt","decodeURI","join","distance","getBoundingClientRect","top","loop","time","scrollTo","requestAnimationFrame","end","t","b","c","jump","getElementById","substring","test","tabIndex","focus","url","slice","lastIndexOf","_buildHtml","_parseContent","_headingsArray","_scrollListener","clickListener","_options","init","customOptions","args","source","key","hasOwnProp","extend","destroy","getContentElement","getTocElement","nestedHeadings","this","isClick","throttle","toc","scrollHeight","activeItem","scrollAmount","updateTocScroll","isTop","scrollingElement","eventPhase","currentTarget","onhashchange","onscrollend","timeout","clearTimeout","setTimeout","innerHTML","removeEventListener","refresh","Object","prototype","hasOwnProperty","fn","threshold","scope","last","deferTimer","context","now","Date","apply"],"sourceRoot":""}