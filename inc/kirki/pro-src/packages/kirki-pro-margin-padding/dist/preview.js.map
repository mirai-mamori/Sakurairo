{"mappings":"2DAkCI,SAAAA,EAAAC,EAAAC,EAAAC,GAEA,GAAA,iBAAAA,GAAA,kBAAAA,EAAA,OAAAH,EAGF,KAAAC,EAAAG,KAAAH,EAAAI,OAAAJ,EAAAK,QAAAL,EAAAM,MAFC,OAAAP,EAGEQ,IAAHC,EAAmBN,EAAnBO,QAAA,SAAA,iBAxCFV,GAAAE,EAAAS,QAAA","sources":["src/preview.js"],"sourcesContent":["(() => {\r\n  /**\r\n   * Function to hook into `kirkiPostMessageStylesOutput` filter.\r\n   *\r\n   * @param {string} styles The styles to be filtered.\r\n   * @param {string|Object|int} values The control's value.\r\n   * @param {Object} output The control's output argument.\r\n   * @param {string} controlType The control type.\r\n   *\r\n   * @return {string} The filtered styles.\r\n   */\r\n  const stylesOutput = (styles, values, output, controlType) => {\r\n    if (\"kirki-margin\" !== controlType && \"kirki-padding\" !== controlType) {\r\n      return styles;\r\n    }\r\n\r\n    if (!values.top && !values.right && !values.bottom && !values.left) {\r\n      return styles;\r\n    }\r\n\r\n    const property = controlType.replace(\"kirki-\", \"\");\r\n\r\n    styles += output.element + \"{\";\r\n\r\n    for (const position in values) {\r\n      if (Object.hasOwnProperty.call(values, position)) {\r\n        const value = values[position];\r\n\r\n        if (\"\" !== value) {\r\n          styles += property + \"-\" + position + \": \" + value + \";\";\r\n        }\r\n      }\r\n    }\r\n\r\n    styles += \"}\";\r\n\r\n    return styles;\r\n  };\r\n\r\n  // Hook the function to the `kirkiPostMessageStylesOutput` filter.\r\n  wp.hooks.addFilter(\"kirkiPostMessageStylesOutput\", \"kirki\", stylesOutput);\r\n})();\r\n"],"names":["styles","values","output","controlType","top","right","bottom","left","hooks","property","replace","element"],"version":3,"file":"preview.js.map"}